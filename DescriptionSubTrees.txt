For delete, insert and update I propose a really straight-forward AST.

The first node (the root), contains which operation to apply and we thus have a case split

***
deleteStatement

first child : UID of the table
second child : WHERE-clause to apply to table

The operator of delete statement can apply the where clause to the table given by first child and delete entries which remain.

***
updateStatement

first child : UID of the table
second child : SET assignment
third child : optional WHERE-clause

The operator of update statement can optionnally apply the where clause to the table and the update the entries which remain.

***
insertStatement

first child : UID of the table
second child : OPTIONAL list of columns names (attributes)
third child : list of values

The operator of insert statement can insert into the table the values given, matching optionally with the columns names.

***
predicate

first child : comparable
second child : comparator
third child : comparable
fourth child : optional AND (which has the same form)

***
set

first child : column (attribute) of a table
second child : value
third child : optional SET

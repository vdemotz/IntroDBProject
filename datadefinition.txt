create table User
   ( username varchar(40) primary key,
     firstName varchar(40),
     lastName varchar(40),
     password varchar(40) not null
   );


create table CaseDetail
   ( caseId integer primary key auto_increment,
     title varchar(40) not null,
     street varchar(40),
     city varchar(40),
     zipCode varchar(40),
     isOpen boolean not null,
     date datetime,
     description text,
     authorName varchar(40),
     foreign key (authorName) references User(username)
   );


create table CaseNote
   ( caseId integer,
     caseNoteId integer,
     text text,
     date datetime,
     authorUsername varchar(40),
     primary key (caseId, caseNoteId),
     foreign key (authorUsername) references User(username),
     foreign key (caseId) references CaseDetail(caseId) on delete cascade
   );


create table Person
   ( personId integer primary key auto_increment,
     firstName varchar(40),
     lastName varchar(40),
     birthdate date
   );


create table PersonNote
   ( personId integer,
     personNoteId integer,
     text text,
     date datetime,
     authorUsername varchar(40),
     primary key (personId, personNoteId),
     foreign key (authorUsername) references User(username),
     foreign key (personId) references Person(personId) on delete cascade
   );


create table Category
   ( name varchar(40) primary key
   );


create table CategoryForCase
   ( caseId integer,
     categoryName varchar(40),
     primary key (caseId, categoryName),
     foreign key (caseId) references CaseDetail(caseId) on delete cascade,
     foreign key (categoryName) references Category(name) on delete cascade
   );


create table Conviction
   ( convictionId integer primary key auto_increment,
     startDate date,
     endDate date
   );


create table ConvictionType
   ( convictionId integer,
     categoryName varchar(40),
     primary key (convictionId, categoryName),
     foreign key (convictionId) references Conviction(convictionId) on delete cascade,
     foreign key (categoryName) references Category(name) on update cascade on delete cascade
   );


create table Suspected
   ( personId integer,
     caseId integer,
     primary key (personId, caseId),
     foreign key (personId) references Person(personId) on delete cascade,
     foreign key (caseId) references CaseDetail(caseId) on delete cascade
   );


create table Convicted
   ( personId integer,
     caseId integer,
     convictionId integer,
     primary key (personId, caseId, convictionId),
     foreign key (personId) references Person(personId) on delete cascade,
     foreign key (caseId) references CaseDetail(caseId) on delete cascade,
     foreign key (convictionId) references Conviction(convictionId) on delete cascade
   );
